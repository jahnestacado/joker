version: "3"
services:
  zoo1:
    image: zookeeper
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    deploy:
      placement:
        constraints: [node.hostname == minion-1]
    volumes:
      - /home/jahn/shared/zookeeper/1:/data 

  zoo2:
    image: zookeeper
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    deploy:
      placement:
        constraints: [node.hostname == minion-2]
    volumes:
      - /home/jahn/shared/zookeeper/2:/data 

  zoo3:
    image: zookeeper
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    deploy:
      placement:
        constraints: [node.hostname == minion-3]
    volumes:
      - /home/jahn/shared/zookeeper/3:/data 

  kafka-1:
    image: zeelos/cp-kafka:5.0.0-arm64v8
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
    - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1    
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.178.24:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_HEAP_OPTS: -Xmx256M -Xms128M
    volumes:
      - /home/jahn/shared/kafka/1/:/var/lib/kafka/data
    deploy:
      placement:
        constraints: [node.hostname == minion-1]

  kafka-2:
    image: zeelos/cp-kafka:5.0.0-arm64v8
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
    - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2    
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.178.24:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_HEAP_OPTS: -Xmx256M -Xms128M
    volumes:
      - /home/jahn/shared/kafka/2/:/var/lib/kafka/data
    deploy:
      placement:
        constraints: [node.hostname == minion-2]
      
  kafka-3:
    image: zeelos/cp-kafka:5.0.0-arm64v8
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    ports:
    - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3    
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2182,zoo3:2183, 
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.178.24:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_NUM_PARTITIONS: 2
      KAFKA_HEAP_OPTS: -Xmx256M -Xms128M
    volumes:
      - /home/jahn/shared/kafka/3/:/var/lib/kafka/data
    deploy:
      placement:
        constraints: [node.hostname == minion-3]
      
  schema-registry:
    image: zeelos/cp-schema-registry:5.0.0-arm64v8
    depends_on:
        - zoo1
        - zoo2
        - zoo3
        - kafka-1
        - kafka-2
        - kafka-3
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zoo1:2181
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      SCHEMA_REGISTRY_DEBUG: "true"
      
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      #    volumes:
      #  - /home/jahn/shared/postgres:/var/lib/postgresql/data
      
  coinmarketcap-producer:
    image: jahnestacado/coinmarketcap-producer
    depends_on:
        - zoo1
        - zoo2
        - zoo3
        - kafka-1
        - kafka-2
        - kafka-3
    environment:
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: 192.168.178.24:19092
      KAFKA_PRODUCER_SCHEMA_REGISTRY_URL: schema-registry:8085
      CMC_COIN_IDS: "1,2,1831,1027,52"

  twitter-producer:
    image: jahnestacado/twitter-producer
    depends_on:
        - zoo1
        - zoo2
        - zoo3
        - kafka-1
        - kafka-2
        - kafka-3
    environment:
      KAFKA_PRODUCER_BOOTSTRAP_SERVERS: 192.168.178.24:19092
      KAFKA_PRODUCER_SCHEMA_REGISTRY_URL: schema-registry:8085
      TWITTER_TRACKS: "bitcoin,BTC,etherium,ETH,ripple,XRP,litecoin,LTC,bitcoin-cash,BHC,cryptocurrency,crypto"
    deploy:
      placement:
        constraints: [node.hostname == minion-4]
      
  postgresql-sink:
    image: jahnestacado/postgresql-sink
    depends_on:
        - zoo1
        - zoo2
        - zoo3
        - kafka-1
        - kafka-2
        - kafka-3
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 192.168.178.24:19092
      KAFKA_SCHEMA_REGISTRY_URL: schema-registry:8085
    deploy:
      placement:
        constraints: [node.hostname == minion-4]

